generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String            @id @default(auto()) @map("_id") @db.ObjectId
  email         String            @unique
  username      String            @unique
  password      String?
  informations  UserInformations?
  settings      UserSettings?
  notifications Notifications?
  sites         Sites[]
}

model UserSettings {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId
  lang   Lang   @default(fr)
}

model Notifications {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  status           Status   @default(inProgress)
  content          String?
  broadcast_to_all Boolean  @default(false)
  // Optional because you can create global notification
  userId           String?  @unique @db.ObjectId
  user             User?    @relation(fields: [userId], references: [id])
  created_at       DateTime
}

model UserInformations {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  user        User    @relation(fields: [userId], references: [id])
  userId      String  @unique @db.ObjectId
  firstname   String?
  lastname    String?
  phoneNumber String?
  siret       String?
  tva         Int?
  city        String?
  state       String?
  zip         String?
  address     String?
}

model Sites {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  link          String
  documents     Documents[]
  interventions Interventions[]
  solutions     Solutions[]
  detail        SitesDetail?
  userId        String          @db.ObjectId
  user          User            @relation(fields: [userId], references: [id])
}

model SitesDetail {
  id                    String   @id @default(auto()) @map("_id") @db.ObjectId
  next_monthly_payment  DateTime
  monthly_payment_price Float
  signature_date        DateTime
  // Mise en service du produit
  launch_date           DateTime
  current_seat_number   Int      @default(0)
  max_seat_number       Int      @default(3)
  siteId                String?  @unique @db.ObjectId
  site                  Sites?   @relation(fields: [siteId], references: [id])
}

model Documents {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  url     String
  sitesId String @db.ObjectId
  sites   Sites  @relation(fields: [sitesId], references: [id])
}

model Interventions {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  link               String
  title              String
  start_intervention DateTime
  end_intervention   DateTime?
  intern_description String
  global_description String
  site               Sites     @relation(fields: [siteId], references: [id])
  siteId             String    @db.ObjectId
}

model Solutions {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  link    String
  icon    String
  Sites   Sites?  @relation(fields: [sitesId], references: [id])
  sitesId String? @db.ObjectId
}

enum Lang {
  fr
  en
}

enum Status {
  done
  inProgress
}
